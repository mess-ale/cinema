# Generated by Django 5.0.7 on 2024-08-10 05:19

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('cinemaApi', '0006_movie_now_playing'),
    ]

    operations = [
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION filter_movies_by_genre(genre_name TEXT)
            RETURNS TABLE(movie_id INT, title TEXT, description TEXT, director_name TEXT, genre_name TEXT) AS $$
            BEGIN
                RETURN QUERY
                SELECT m.id, m.title, m.description, d.name AS director_name, g.name AS genre_name
                FROM cinemaApi_movie m
                JOIN director d ON m.director_id = d.id
                JOIN genre g ON m.genre_id = g.id
                WHERE g.name = genre_name;
            END; $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS filter_movies_by_genre(TEXT);
            """
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION filter_movies_by_director(director_name TEXT)
            RETURNS TABLE(movie_id INT, title TEXT, description TEXT, director_name TEXT, genre_name TEXT) AS $$
            BEGIN
                RETURN QUERY
                SELECT m.id, m.title, m.description, d.name AS director_name, g.name AS genre_name
                FROM movie m
                JOIN director d ON m.director_id = d.id
                JOIN genre g ON m.genre_id = g.id
                WHERE d.name = director_name;
            END; $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS filter_movies_by_director(TEXT);
            """
        ),
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION filter_movies_by_genre_and_director(genre_name TEXT, director_name TEXT)
            RETURNS TABLE(movie_id INT, title TEXT, description TEXT, director_name TEXT, genre_name TEXT) AS $$
            BEGIN
                RETURN QUERY
                SELECT m.id, m.title, m.description, d.name AS director_name, g.name AS genre_name
                FROM movie m
                JOIN director d ON m.director_id = d.id
                JOIN genre g ON m.genre_id = g.id
                WHERE g.name = genre_name AND d.name = director_name;
            END; $$ LANGUAGE plpgsql;
            """,
            reverse_sql="""
            DROP FUNCTION IF EXISTS filter_movies_by_genre_and_director(TEXT, TEXT);
            """
        ),
    ]